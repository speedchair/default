aug lvimrc
  au! * <buffer>
aug END

if &ft ==# 'helm' || &ft ==# 'mustache'
  setl et ts=2 sw=2
endif


if &ft =~ '\vyaml|json'
if &ft ==# 'yaml' || &ft ==# 'json'
  setl et ts=2 sw=2
  nn <buffer> <silent> K :call CocAction('doHover')<CR>
endif

if &ft ==# 'go'
  setl noet ts=8 sw=8
  let b:ale_enabled = 0
  let b:ale_linters = {'go': ['golangci-lint']}
  au lvimrc BufWritePre <buffer> :silent CocCommand editor.action.formatDocument
  au lvimrc BufWritePre <buffer> :silent call CocAction('runCommand', 'editor.action.organizeImport')
  nm <buffer> <silent> <C-]> :call CocAction('jumpDefinition')<CR>
  nn <buffer> <silent> K :call CocAction('doHover')<CR>
  nn <buffer> <silent> gH :call CocAction('jumpReferences')<CR>
  nn <buffer> <silent> <Leader>i :call CocAction('jumpImplementation')<CR>
endif

if &ft ==# 'python'
  setl et ts=4 sw=4
  let b:ale_linters = {'python': ['pyre']}
  let b:coc_root_patterns = ['.git', 'venv', '.venv']
  nm <buffer> <silent> <C-]> :call CocAction('jumpDefinition')<CR>
  nn <buffer> <silent> K :call CocAction('doHover')<CR>
  nn <buffer> <silent> gH :call CocAction('jumpReferences')<CR>
endif

if &ft ==# 'vim'
  setl et ts=2 sw=2
endif

if &ft ==# 'groovy'
  setl et ts=2 sw=2
endif

if &ft ==# 'sh'
  setl et ts=4 sw=4
endif

if &ft ==# 'javascript' || &ft ==# 'typescript'
  setl et ts=4 sw=4
  nm <buffer> <silent> <C-]> :call CocAction('jumpDefinition')<CR>
  nn <buffer> <silent> K :call CocAction('doHover')<CR>
  nn <buffer> <silent> gH :call CocAction('jumpReferences')<CR>
endif

if &ft ==# 'markdown'
  nn <buffer> <silent> <C-]> :e <cfile><CR>
  ":CocInstall coc-markdown-preview-enhanced coc-webview
  nn <buffer> <silent> <Leader>p :silent CocCommand markdown-preview-enhanced.openPreview<CR>
endif
